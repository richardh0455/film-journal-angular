{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.module.ts","webpack:///src/app/components/app/app.component.ts","webpack:///src/app/components/app/app.component.html","webpack:///src/app/components/rolls/new-roll/new-roll.component.ts","webpack:///src/app/components/rolls/new-roll/new-roll.component.html","webpack:///src/app/components/rolls/rolls.component.ts","webpack:///src/app/components/rolls/rolls.component.html","webpack:///src/app/components/shots/new-shot/new-shot.component.ts","webpack:///src/app/components/shots/new-shot/new-shot.component.html","webpack:///src/app/components/shots/shots.component.ts","webpack:///src/app/components/shots/shots.component.html","webpack:///src/app/dummydata/dummycameras.ts","webpack:///src/app/dummydata/dummylenses.ts","webpack:///src/app/dummydata/dummyrolls.ts","webpack:///src/app/dummydata/dummyshots.ts","webpack:///src/app/routes/app-routing.module.ts","webpack:///src/app/services/camera/camera.service.ts","webpack:///src/app/services/lens/lens.service.ts","webpack:///src/app/services/roll/roll.service.ts","webpack:///src/app/services/shot/shot.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppModule","declarations","imports","providers","bootstrap","AppComponent","title","selector","templateUrl","styleUrls","NewRollComponent","rollService","cameraService","formBuilder","rolls","getRollsDateSorted","cameras","getCameras","newRollForm","group","manufacturer","brand","iso","width","camera","date_loaded","getRolls","sort","a","b","getTime","roll","console","log","controls","setValue","rollData","reset","Number","camera_id","Date","addRoll","onSubmit","RollsComponent","NewShotComponent","ShotsComponent","route","shotService","paramMap","subscribe","params","shots","getShots","filter","x","roll_id","get","model_number","lens_mounting","film","style","lenses","aperture","mounting","shutter_speed","lighting","date_time","location","description","lens_id","routes","path","component","AppRoutingModule","forRoot","CameraService","map","cameraID","find","providedIn","LensService","lens","lensId","getLenses","RollService","Math","max","apply","push","String","ShotService","lensService","shot","getLens","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule  }   from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './routes/app-routing.module';\r\nimport { AppComponent } from './components/app/app.component';\r\nimport { RollsComponent } from './components/rolls/rolls.component';\r\nimport { ShotsComponent } from './components/shots/shots.component';\nimport { NewRollComponent } from './components/rolls/new-roll/new-roll.component';\nimport { NewShotComponent } from './components/shots/new-shot/new-shot.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RollsComponent,\r\n    ShotsComponent,\r\n    NewRollComponent,\r\n    NewShotComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Film Journal';\r\n}\r\n","<h1>{{title}}</h1>\r\n\r\n<h3>\r\n  <a [title]=\"'Home'\" [routerLink]=\"['/rolls']\">\r\n    Home\r\n  </a>\r\n</h3>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\nimport {Roll} from '../../../interfaces/roll';\nimport {Camera} from '../../../interfaces/camera';\nimport {RollService} from '../../../services/roll/roll.service';\nimport {CameraService} from '../../../services/camera/camera.service';\nimport { FormBuilder, ReactiveFormsModule   } from '@angular/forms';\n\n@Component({\n  selector: 'app-new-roll',\n  templateUrl: './new-roll.component.html',\n  styleUrls: ['./new-roll.component.scss']\n})\nexport class NewRollComponent implements OnInit {\n\n  rolls: Roll[];\n  cameras: Camera[];\n  newRollForm;\n  constructor(private rollService: RollService, private cameraService: CameraService, private formBuilder: FormBuilder) {\n    this.rolls =  this.getRollsDateSorted() as Roll[];\n    this.cameras = this.cameraService.getCameras() as Camera[];\n\n    this.newRollForm = this.formBuilder.group({\n      manufacturer: '',\n      brand: '',\n      iso: '',\n      width: '',\n      camera: null,\n      date_loaded: ''\n    });\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  getRollsDateSorted()\n  {\n    return this.rollService.getRolls().sort((a, b) => b.date_loaded.getTime() - a.date_loaded.getTime())\n  }\n\n  changeSelectedCamera(camera)\n  {\n\n  }\n\n  loadPreviousRoll(roll)\n  {\n    console.log(roll);\n    this.newRollForm.controls['manufacturer'].setValue(roll.manufacturer);\n    this.newRollForm.controls['brand'].setValue(roll.brand);\n    this.newRollForm.controls['iso'].setValue(roll.iso);\n    this.newRollForm.controls['width'].setValue(roll.width);\n    //this.newRollForm.manufacturer.setValue(roll.manufacturer);\n  }\n\n  onSubmit(rollData) {\n    this.newRollForm.reset();\n\n    console.log('Your order has been submitted', rollData);\n    var roll = {\n      manufacturer: rollData.manufacturer,\n      brand: rollData.brand,\n      width: rollData.width,\n      iso: Number(rollData.iso),\n      camera_id: Number(rollData.camera.id),\n      date_loaded: new Date(rollData.date_loaded)\n    } as Roll;\n\n    this.rollService.addRoll(roll);\n    this.rolls = this.getRollsDateSorted();\n\n  }\n\n}\n","<p>new-roll works!</p>\n\n\n<form [formGroup]=\"newRollForm\" (ngSubmit)=\"onSubmit(newRollForm.value)\">\n  <div>\n    <label for=\"manufacturer\">\n      Manufacturer\n    </label>\n    <input id=\"manufacturer\" type=\"text\" formControlName=\"manufacturer\">\n  </div>\n\n  <div>\n    <label for=\"brand\">\n      Brand\n    </label>\n    <input id=\"brand\" type=\"text\" formControlName=\"brand\">\n  </div>\n\n  <div>\n    <label for=\"iso\">\n      ISO\n    </label>\n    <input id=\"iso\" type=\"number\" formControlName=\"iso\">\n  </div>\n\n  <div>\n    <label for=\"width\">\n      Width\n    </label>\n    <input id=\"width\" type=\"text\" formControlName=\"width\">\n  </div>\n\n  <div>\n    <label for=\"date_loaded\">\n      Select Camera\n    </label>\n  <select formControlName=\"camera\">\n      <option value=\"\">Select Camera</option>\n      <option *ngFor=\"let camera of cameras\" [ngValue]=\"camera\" (change)=\"changeSelectedCamera(camera)\">{{camera.manufacturer + ' '+ camera.brand + ' ' + camera.model_number}}\n      </option>\n   </select>\n   </div>\n\n   <div>\n     <label for=\"date_loaded\">\n       Date Loaded\n     </label>\n     <input id=\"date_loaded\" type=\"date\" formControlName=\"date_loaded\">\n   </div>\n\n  <button class=\"button\" type=\"submit\">Add New Roll</button>\n\n</form>\n\n\n<h3>Roll History</h3>\n<div *ngFor=\"let roll of rolls; index as i\">\n    <a [title]=\"roll.manufacturer + ' ' + roll.brand + ' ' + roll.iso + ' ' + roll.date_loaded\" (click)=\"loadPreviousRoll(roll)\">\n      {{roll.manufacturer + ' ' + roll.brand + ' ' + roll.iso + ' ' + roll.date_loaded.toLocaleString('en-NZ')}}\n    </a>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport {Roll} from '../../interfaces/roll';\r\nimport {Camera} from '../../interfaces/camera';\r\nimport {RollService} from '../../services/roll/roll.service';\r\nimport {CameraService} from '../../services/camera/camera.service';\r\n\r\n@Component({\r\n  selector: 'app-rolls',\r\n  templateUrl: './rolls.component.html',\r\n  styleUrls: ['./rolls.component.scss']\r\n})\r\nexport class RollsComponent implements OnInit {\r\n  rolls: Roll[];\r\n  cameras: Camera[];\r\n  constructor(private rollService: RollService, private cameraService: CameraService) {\r\n    this.rolls =  this.rollService.getRolls() as Roll[];\r\n    this.cameras = this.cameraService.getCameras() as Camera[];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div *ngFor=\"let camera of cameras; index as i\">\r\n\r\n  <h3>\r\n      {{camera.manufacturer + ' ' + camera.brand + ' ' + camera.model_number}}\r\n  </h3>\r\n  <div *ngFor=\"let roll of rolls; index as i\">\r\n    <ng-container *ngIf=\"roll.camera_id === camera.id\">\r\n      <a [title]=\"roll.manufacturer + ' ' + roll.brand + ' ' + roll.iso + ' ' + roll.date_loaded\" [routerLink]=\"['/rolls', roll.id]\">\r\n        {{roll.manufacturer + ' ' + roll.brand + ' ' + roll.iso + ' ' + roll.date_loaded}}\r\n      </a>\r\n    </ng-container>\r\n  </div>\r\n\r\n</div>\r\n<div>\r\n<a [routerLink]=\"['/rolls/new']\">Add Roll</a>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-new-shot',\n  templateUrl: './new-shot.component.html',\n  styleUrls: ['./new-shot.component.scss']\n})\nexport class NewShotComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>new-shot works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {ShotService} from '../../services/shot/shot.service';\r\nimport {Shot} from '../../interfaces/shot';\r\nimport {Lens} from '../../interfaces/lens';\r\n\r\n@Component({\r\n  selector: 'app-shots',\r\n  templateUrl: './shots.component.html',\r\n  styleUrls: ['./shots.component.scss']\r\n})\r\nexport class ShotsComponent implements OnInit {\r\n  shots: Shot[];\r\n  constructor(private route: ActivatedRoute, private shotService: ShotService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      this.shots =  this.shotService.getShots().filter(x => x.roll_id === +params.get('rollID')) as Shot[];\r\n\r\n    });\r\n  }\r\n\r\n}\r\n","<p>shots works!</p>\r\n\r\n<table border=\"1\">\r\n  <colgroup>\r\n    <col span=\"1\" style=\"width: 30%;\">\r\n    <col span=\"1\" style=\"width: 10%;\">\r\n    <col span=\"1\" style=\"width: 10%;\">\r\n    <col span=\"1\" style=\"width: 10%;\">\r\n    <col span=\"1\" style=\"width: 10%;\">\r\n    <col span=\"1\" style=\"width: 10%;\">\r\n  </colgroup>\r\n  <tbody>\r\n    <th>Date/Time</th>\r\n    <th>Description</th>\r\n    <th>Aperture</th>\r\n    <th>Shutter Speed</th>\r\n    <th>Lighting</th>\r\n    <th>Lens</th>\r\n\r\n  <tr *ngFor=\"let shot of shots; index as i\">\r\n    <td>{{shot.date_time}}</td>\r\n    <td>{{shot.description}}</td>\r\n    <td>{{shot.aperture}}</td>\r\n    <td>{{shot.shutter_speed}}</td>\r\n    <td>{{shot.lighting}}</td>\r\n    <td>{{shot.lens.width}}</td>\r\n\r\n  </tr>\r\n  <!-- . . . -->\r\n  </tbody>\r\n<table>\r\n<div>\r\n  \r\n</div>\r\n","export const cameras = [\r\n  {\r\n    id: '1',\r\n    manufacturer: 'Canon',\r\n    brand: 'Rebel',\r\n    model_number: '600D',\r\n    lens_mounting: 'EF',\r\n    film: '35mm',\r\n    style: 'DSLR'\r\n  },\r\n  {\r\n    id: '2',\r\n    manufacturer: 'Canon',\r\n    brand: 'Rebel',\r\n    model_number: '3000N',\r\n    lens_mounting: 'EF',\r\n    film: '35mm',\r\n    style: 'DSLR'\r\n  }\r\n];\r\n","export const lenses = [\r\n  {\r\n    id: '1',\r\n    manufacturer: 'Canon',\r\n    width: '50mm',\r\n    aperture: '1.8',\r\n    mounting: 'EF'\r\n  },\r\n  {\r\n    id: '2',\r\n    manufacturer: 'Canon',\r\n    width: '18-55mm',\r\n    aperture: '3.5-5.6',\r\n    mounting: 'EF'\r\n  }\r\n];\r\n","export const rolls = [\r\n  {\r\n    id: '2',\r\n    manufacturer: 'Kodak',\r\n    brand: 'Colorplus',\r\n    iso: '200',\r\n    camera_id: '1',\r\n    width: '35mm',\r\n    date_loaded: '2020-03-16'\r\n  },\r\n  {\r\n    id: '1',\r\n    manufacturer: 'Kodak',\r\n    brand: 'Colorplus',\r\n    iso: '200',\r\n    camera_id: '2',\r\n    width: '35mm',\r\n    date_loaded: '2019-12-26'\r\n  },\r\n];\r\n","export const shots = [\r\n  {\r\n    id: '1',\r\n    roll_id: '2',\r\n    aperture: '1.8',\r\n    shutter_speed: '350',\r\n    lighting: 'dusk',\r\n    date_time: '2020-03-17T15:45:00',\r\n    location: '-36.844805199999996, 174.7542183',\r\n    description: 'Eleanor on the Porch',\r\n    lens_id: '1'\r\n  },\r\n  {\r\n    id: '2',\r\n    roll_id: '2',\r\n    aperture: '1.8',\r\n    shutter_speed: '350',\r\n    lighting: 'dusk',\r\n    date_time: '2020-03-17T15:45:00',\r\n    location: '-36.844805199999996, 174.7542183',\r\n    description: 'Eleanor on the Porch',\r\n    lens_id: '2'\r\n  },\r\n  {\r\n    id: '3',\r\n    roll_id: '1',\r\n    aperture: '1.8',\r\n    shutter_speed: '350',\r\n    lighting: 'dusk',\r\n    date_time: '2020-03-17T15:45:00',\r\n    location: '-36.844805199999996, 174.7542183',\r\n    description: 'Me at the Window',\r\n    lens_id: '1'\r\n  },\r\n  {\r\n    id: '4',\r\n    roll_id: '1',\r\n    aperture: '1.8',\r\n    shutter_speed: '350',\r\n    lighting: 'dusk',\r\n    date_time: '2020-03-17T15:45:00',\r\n    location: '-36.844805199999996, 174.7542183',\r\n    description: 'Dinner with the Guys',\r\n    lens_id: '2'\r\n  }\r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {RollsComponent} from '../components/rolls/rolls.component';\r\nimport {ShotsComponent} from '../components/shots/shots.component';\r\nimport {NewRollComponent} from '../components/rolls/new-roll/new-roll.component';\r\nimport {NewShotComponent} from '../components/shots/new-shot/new-shot.component';\r\n\r\n\r\nconst routes: Routes = [{ path: 'rolls', component: RollsComponent },\r\n{path: 'rolls/new', component: NewRollComponent },\r\n{ path: 'rolls/:rollID/new', component: NewShotComponent },\r\n  { path: 'rolls/:rollID', component: ShotsComponent }\r\n  ];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {cameras} from '../../dummydata/dummycameras';\r\nimport {Camera} from '../../interfaces/camera';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CameraService {\r\n\r\n  constructor() { }\r\n  getCameras(): Camera[] {\r\n    return cameras.map(camera => ({\r\n      id: Number(camera.id),\r\n      manufacturer: camera.manufacturer,\r\n      brand: camera.brand,\r\n      model_number: camera.model_number,\r\n      lens_mounting: camera.lens_mounting,\r\n      film: camera.film,\r\n      style: camera.style,\r\n    }) as Camera);\r\n  }\r\n\r\n  getCamera(cameraID: number): Camera {\r\n    return this.getCameras().find(camera => camera.id === cameraID);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {lenses} from '../../dummydata/dummylenses';\r\nimport {Lens} from '../../interfaces/lens';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LensService {\r\n\r\n  constructor() { }\r\n\r\n  getLenses(): Lens[] {\r\n    return lenses.map(lens => ({\r\n      id: Number(lens.id),\r\n      manufacturer: lens.manufacturer,\r\n      width: lens.width,\r\n      aperture: lens.aperture,\r\n      mounting: lens.mounting,\r\n    }) as Lens);\r\n  }\r\n\r\n  getLens(lensId: number): Lens {\r\n    return this.getLenses().find(lens => lens.id === lensId);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {rolls} from '../../dummydata/dummyrolls';\r\nimport {Roll} from '../../interfaces/roll';\r\nimport {CameraService} from '../camera/camera.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RollService {\r\n\r\n  constructor(private cameraService: CameraService) { }\r\n\r\n  getRolls(): Roll[] {\r\n    return rolls.map(roll => ({\r\n      id: Number(roll.id),\r\n      manufacturer: roll.manufacturer,\r\n      brand: roll.brand,\r\n      width: roll.width,\r\n      iso: Number(roll.iso),\r\n      camera_id: Number(roll.camera_id),\r\n      date_loaded: new Date(roll.date_loaded)\r\n    }) as Roll);\r\n  }\r\n\r\n  addRoll(roll : Roll){\r\n    var id = Math.max.apply(Math, this.getRolls().map(function(roll) { return roll.id; })) + 1;\r\n    rolls.push({\r\n      id: id,\r\n      manufacturer: roll.manufacturer,\r\n      brand: roll.brand,\r\n      width: roll.width,\r\n      iso: String(roll.iso),\r\n      camera_id: String(roll.camera_id),\r\n      date_loaded: String(roll.date_loaded)\r\n    });\r\n    console.log(\"Rolls in DB:\")\r\n    console.log(this.getRolls());\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { shots } from '../../dummydata/dummyshots';\r\nimport {Shot} from '../../interfaces/shot';\r\nimport {LensService} from '../lens/lens.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShotService {\r\n  constructor(private lensService: LensService) { }\r\n\r\n  getShots(): Shot[] {\r\n    return shots.map(shot => ({\r\n      id: Number(shot.id),\r\n      roll_id: Number(shot.roll_id),\r\n      aperture: Number(shot.aperture),\r\n      shutter_speed: Number(shot.shutter_speed),\r\n      lighting: shot.lighting,\r\n      date_time: new Date(shot.date_time),\r\n      location: shot.location,\r\n      description: shot.description,\r\n      lens: this.lensService.getLens(Number(shot.lens_id)),\r\n    }) as Shot);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}